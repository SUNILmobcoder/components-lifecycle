{"ast":null,"code":"import _classCallCheck from\"/home/mobcoder/Desktop/Github/components-lifecycle/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/mobcoder/Desktop/Github/components-lifecycle/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/home/mobcoder/Desktop/Github/components-lifecycle/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/mobcoder/Desktop/Github/components-lifecycle/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';import reactDom from'react-dom';import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";var Mounting=/*#__PURE__*/function(_Component){_inherits(Mounting,_Component);var _super=_createSuper(Mounting);// initially called in mounting - 1\nfunction Mounting(props){var _this;_classCallCheck(this,Mounting);_this=_super.call(this,props);_this.changeColor=function(){_this.setState({color:\"purple\"});};_this.state={color:\"red\"};return _this;}// called befor reder mounting - 2 updating -1\n// did'nt work in my case\n_createClass(Mounting,[{key:\"componentDidMount\",value:// called after reder mounting - 4\nfunction componentDidMount(){var _this2=this;setTimeout(function(){_this2.setState({color:\"blue\"});},3000);}// creating change color method\n},{key:\"shouldComponentUpdate\",value:// called in updating -2\n// used for specify that react should contineu with rendering or not\nfunction shouldComponentUpdate(){return true;}// called during updaing -4 before value update\n},{key:\"getSnapshotBeforeUpdate\",value:function getSnapshotBeforeUpdate(prevProps,prevState){document.getElementById(\"d1\").innerHTML='Before the update : '+prevState.color;}// called during updaing -5 after value update\n},{key:\"componentDidUpdate\",value:function componentDidUpdate(){document.getElementById(\"d2\").innerHTML='After the update : '+this.state.color;}// mounting - 3 updating -3\n},{key:\"render\",value:function render(){return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"h1\",{children:[\"My favorate color is \",this.state.color]}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:this.changeColor,children:\"Change Color name to purple\"}),/*#__PURE__*/_jsx(\"div\",{id:\"d1\"}),/*#__PURE__*/_jsx(\"div\",{id:\"d2\"})]});}}],[{key:\"getDerivedStateFromProps\",value:function getDerivedStateFromProps(props,state){return{color:props.favcol};}}]);return Mounting;}(Component);export{Mounting as default};","map":{"version":3,"sources":["/home/mobcoder/Desktop/Github/components-lifecycle/src/components/Mounting.jsx"],"names":["React","Component","reactDom","Mounting","props","changeColor","setState","color","state","setTimeout","prevProps","prevState","document","getElementById","innerHTML","favcol"],"mappings":"ogBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,MAAOC,CAAAA,QAAP,KAAqB,WAArB,C,2FAEqBC,CAAAA,Q,oGACjB;AACA,kBAAaC,KAAb,CAAoB,0CAChB,uBAAMA,KAAN,EADgB,MAmBpBC,WAnBoB,CAmBN,UAAM,CAChB,MAAKC,QAAL,CAAc,CAACC,KAAK,CAAC,QAAP,CAAd,EACH,CArBmB,CAEhB,MAAKC,KAAL,CAAa,CAACD,KAAK,CAAC,KAAP,CAAb,CAFgB,aAGnB,CAED;AACA;sDAKA;AACA,4BAAoB,iBAChBE,UAAU,CAAE,UAAM,CACd,MAAI,CAACH,QAAL,CAAc,CAACC,KAAK,CAAC,MAAP,CAAd,EACH,CAFS,CAER,IAFQ,CAAV,CAGH,CAED;qCAKA;AACA;AACA,gCAAwB,CACpB,MAAO,KAAP,CACH,CAED;uCACA,iCAAwBG,SAAxB,CAAmCC,SAAnC,CAA8C,CAC1CC,QAAQ,CAACC,cAAT,CAAwB,IAAxB,EAA8BC,SAA9B,CAA0C,uBAAyBH,SAAS,CAACJ,KAA7E,CACH,CACD;kCACA,6BAAqB,CACjBK,QAAQ,CAACC,cAAT,CAAwB,IAAxB,EAA8BC,SAA9B,CAA0C,sBAAwB,KAAKN,KAAL,CAAWD,KAA7E,CACH,CACD;sBACA,iBAAS,CACL,mBACI,oCACI,8CAA0B,KAAKC,KAAL,CAAWD,KAArC,GADJ,cAEI,eAAQ,IAAI,CAAC,QAAb,CAAsB,OAAO,CAAE,KAAKF,WAApC,yCAFJ,cAGI,YAAK,EAAE,CAAC,IAAR,EAHJ,cAII,YAAK,EAAE,CAAC,IAAR,EAJJ,GADJ,CAQH,C,0CAxCD,kCAAgCD,KAAhC,CAAuCI,KAAvC,CAA8C,CAC1C,MAAQ,CAACD,KAAK,CAACH,KAAK,CAACW,MAAb,CAAR,CACH,C,sBAXiCd,S,SAAjBE,Q","sourcesContent":["import React, { Component } from 'react';\nimport reactDom from 'react-dom';\n\nexport default class Mounting extends Component {\n    // initially called in mounting - 1\n    constructor (props) {\n        super(props);\n        this.state = {color:\"red\"};\n    }\n\n    // called befor reder mounting - 2 updating -1\n    // did'nt work in my case\n    static getDerivedStateFromProps(props, state) {\n        return ({color:props.favcol})\n    }\n\n    // called after reder mounting - 4\n    componentDidMount() {\n        setTimeout( () => {\n            this.setState({color:\"blue\"})\n        },3000)\n    }\n\n    // creating change color method\n    changeColor = () => {\n        this.setState({color:\"purple\"})\n    }\n\n    // called in updating -2\n    // used for specify that react should contineu with rendering or not\n    shouldComponentUpdate() {\n        return true;\n    }\n\n    // called during updaing -4 before value update\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        document.getElementById(\"d1\").innerHTML = 'Before the update : ' + prevState.color;\n    }\n    // called during updaing -5 after value update\n    componentDidUpdate() {\n        document.getElementById(\"d2\").innerHTML = 'After the update : ' + this.state.color;\n    }\n    // mounting - 3 updating -3\n    render() {\n        return (\n            <div>\n                <h1>My favorate color is {this.state.color}</h1>\n                <button type=\"button\" onClick={this.changeColor} >Change Color name to purple</button>\n                <div id=\"d1\"></div>\n                <div id=\"d2\"></div>\n            </div>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}